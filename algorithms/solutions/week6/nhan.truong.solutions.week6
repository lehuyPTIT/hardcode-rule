# Problem 1: Degree of an Array
https://leetcode.com/problems/degree-of-an-array/description/

```ruby
def find_shortest_sub_array(nums)
  sum    = {}
  start  = {}
  ending = {}
  max = -1
  key = 0
  nums.each.with_index do |num, index|
    if sum.include? num
      sum[num]    += 1
      ending[num] = index
    else
      sum[num] = 1
      start[num] = index
      ending[num] = index
    end
    if max < sum[num] || ((ending[key] - start[key]) > (ending[num] - start[num]) && max == sum[num])
      key = num
      max = sum[num] 
    end
  end
  ending[key] - start[key] + 1
end
```

# Problem 1: Rotate Image
https://leetcode.com/problems/rotate-image/description/

```ruby
def rotate(matrix)
  len = matrix.length
  (0..len/2).each do |x|
    (len - 2*x - 1).times do |y|
      y += x
      a = matrix[x][y]
      b = matrix[y][len - x - 1]
      c = matrix[len - x - 1][len - y - 1]
      d = matrix[len - y - 1][x]

      matrix[x][y]                     = d
      matrix[y][len - x - 1]           = a
      matrix[len - x - 1][len - y - 1] = b
      matrix[len - y - 1][x]           = c
    end
  end
  matrix
end
```
